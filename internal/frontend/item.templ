package frontend

import (
	"fmt"
	"github.com/rank1zen/kevin/internal/ddragon"
	"path"
)

func itemSpriteSmallClass(id int) templ.Attributes {
	item := ddragon.ItemsMap[id]
	fullPath := path.Join("/static/sprite", "small_"+item.Sprite)
	w := 36
	h := 36
	x := (item.X * 3) / 4
	y := (item.Y * 3) / 4

	return templ.Attributes{
		"src":   fullPath,
		"title": item.Name,
		"class": fmt.Sprintf("w-[%dpx] h-[%dpx] object-none object-[-%dpx_-%dpx] rounded", w, h, x, y),
	}
}

templ ItemSmallSprite(id int) {
	<img { itemSpriteSmallClass(id)... }/>
}

func itemSpriteTinyClass(id int) templ.Attributes {
	item := ddragon.ItemsMap[id]
	fullPath := path.Join("/static/sprite", "tiny_"+item.Sprite)
	w := 24
	h := 24
	x := item.X / 2
	y := item.Y / 2

	return templ.Attributes{
		"src":   fullPath,
		"title": item.Name,
		"class": fmt.Sprintf("w-[%dpx] h-[%dpx] object-none object-[-%dpx_-%dpx] rounded", w, h, x, y),
	}
}

templ ItemTinySprite(id int) {
	<img { itemSpriteTinyClass(id)... }/>
}

templ ItemRow(items [7]int) {
	<div
		x-data="
			{
				open: false,
				toggle() {
					if (this.open) {
						return this.close()
					}
					this.$refs.button.focus()
					this.open = true
				},
				close(focusAfter) {
					if (! this.open) return
					this.open = false
					focusAfter && focusAfter.focus()
				}
			}
		"
		x-on:keydown.escape.prevent.stop="close($refs.button)"
		x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
		x-id="['dropdown-button']"
		class="relative"
	>
		<button
			x-ref="button"
			x-on:click="toggle()"
			:aria-expanded="open"
			:aria-controls="$id('dropdown-button')"
			type="button"
			class="relative flex flex-none p-1 gap-1 transition-colors rounded bg-gray-100 hover:bg-gray-200 focus:bg-gray-200 active:bg-gray-300"
		>
			for _, id := range items {
				if id != 0 {
					@ItemTinySprite(id)
				} else {
					<div class="bg-gray-200 rounded size-6 flex-none"></div>
				}
			}
		</button>
		<div
			x-ref="panel"
			x-show="open"
			x-transition.origin.top.left
			x-on:click.outside="close($refs.button)"
			:id="$id('dropdown-button')"
			x-cloak
			class="absolute right-0 min-w-48 rounded shadow-sm mt-2 z-10 origin-top-right bg-white p-1.5 outline-none border border-gray-200"
		>
			<span>
				Some example text
			</span>
		</div>
	</div>
}
