package frontend

import (
	"context"
	"io"
)

// Button is a simple button layout.
type Button struct {
	// IconPath is the icon on the button. If empty, no icon is used.
	IconPath string

	// Label is the text on the button. If empty, no label is used.
	Label string
}

templ (m Button) build() {
	if m.Label != "" {
		<div class="flex flex-none h-9 w-32 gap-2 items-center justify-center">
			if m.IconPath != "" {
				@staticIcon(m.IconPath)
			}
			<span class="whitespace-nowrap font-bold text-sm text-gray-900/90 dark:text-gray-100/90">
				{ m.Label }
			</span>
		</div>
	} else {
		<div class="flex flex-none size-9 items-center justify-center">
			if m.IconPath != "" {
				@staticIcon(m.IconPath)
			}
		</div>
	}
}

func (m Button) Render(ctx context.Context, w io.Writer) error {
	return m.build().Render(ctx, w)
}

type ThinButton struct {
	// IconPath is the icon on the button. If empty, no icon is used.
	IconPath string
}

templ (m ThinButton) build() {
	<div class="flex flex-none w-6 h-9 items-center justify-center">
		@staticIcon(m.IconPath)
	</div>
}

func (m ThinButton) Render(ctx context.Context, w io.Writer) error {
	return m.build().Render(ctx, w)
}
