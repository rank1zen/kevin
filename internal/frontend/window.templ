package frontend

import (
	"context"
	"fmt"
	"github.com/rank1zen/kevin/internal"
	"io"
	"time"
)

type LiveMatchModalWindow struct {
	AverageRank *internal.RankDetail

	StartTime time.Time

	RedSide []LiveMatchSummonerCard

	BlueSide []LiveMatchSummonerCard
}

templ (m LiveMatchModalWindow) makeHeaderContent() {
	<div class="flex items-center justify-between gap-2">
		<div class="flex">
			{ fmt.Sprintf("%v", m.StartTime) } // 5:12
		</div>
		<div class="flex">
			Avg Rank Grandmaster // Avg Rank Grandmaster
		</div>
	</div>
}

templ (m LiveMatchModalWindow) makeContent() {
	<div class="flex justify-center">
		<div>
			for _, s := range m.BlueSide {
				@s
			}
		</div>
		<div class="mt-2">
			for _, s := range m.RedSide {
				@s
			}
		</div>
	</div>
}

func (m LiveMatchModalWindow) Render(ctx context.Context, w io.Writer) error {
	return m.makeContent().Render(ctx, w)
}

type NoLiveMatchModalWindow struct {}

templ (m NoLiveMatchModalWindow) makeHeaderContent() {
}

templ (m NoLiveMatchModalWindow) makeContent() {
	<div class="flex flex-col items-center justify-center">
		<span class="text-base">
			Currently not in live game
		</span>
	</div>
}

func (m NoLiveMatchModalWindow) Render(ctx context.Context, w io.Writer) error {
	modal := ModalWindow{
		HeaderChildren: m.makeHeaderContent(),
		Children:       m.makeContent(),
	}

	return modal.Render(ctx, w)
}
