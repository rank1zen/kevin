package component

import "context"

// Page is the top-level component returned to the browser.
type Page struct {
	// Title is the document title. An empty value indicates no title.
	Title string

	// HeaderChildren is the content in header. A nil value indicates no
	// header.
	HeaderChildren Component

	// Children is the document body of the page. A nil value indicates no
	// body.
	Children Component

	// FooterChildren is goes in the footer.
	FooterChildren Component
}

templ (m Page) ToTempl(ctx context.Context) {
	<!DOCTYPE html>
	<html
		lang="en"
		x-data="{ darkMode: false }"
		:class="darkMode && 'dark'"
	>
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<link rel="stylesheet" href="static/output.css"/>
			<script src="https://unpkg.com/htmx.org@2.0.0" integrity="sha384-wS5l5IKJBvK6sPTKa2WZ1js3d947pvWXbPJ1OmWfEuxLgeHcEbjUUA5i9V5ZkpCw" crossorigin="anonymous"></script>
			<script src="https://unpkg.com/htmx-ext-json-enc@2.0.1/json-enc.js"></script>
			<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/anchor@3.x.x/dist/cdn.min.js"></script>
			<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.x.x/dist/cdn.min.js"></script>
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			if m.Title != "" {
				<title>
					{ m.Title }
				</title>
			}
		</head>
		<body class="bg-white dark:bg-black">
			if m.HeaderChildren != nil {
				<header class="sticky top-0 w-full z-90 bg-white border-b border-gray-900/10 dark:bg-black dark:border-gray-100/10">
					@m.HeaderChildren.ToTempl(ctx)
				</header>
			}
			<main class="min-h-screen">
				if m.Children != nil {
					@m.Children.ToTempl(ctx)
				}
			</main>
			if m.FooterChildren != nil {
				<footer class="w-full">
					@m.FooterChildren.ToTempl(ctx)
				</footer>
			}
		</body>
	</html>
}
