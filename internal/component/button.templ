package component

import "context"

// Button is a simple button layout.
type Button struct {
	// IconPath is the icon on the button. If empty, no icon is used.
	Icon Icon

	// Label is the text on the button. If empty, no label is used.
	Label string
}

templ (m Button) ToTempl(ctx context.Context) {
	if m.Label != "" {
		<div class="flex flex-none h-9 w-32 gap-2 items-center justify-center">
			if m.Icon != nil {
				@m.Icon.ToTempl(ctx)
			}
			<span class="whitespace-nowrap font-bold text-sm text-gray-900/90 dark:text-gray-100/90">
				{ m.Label }
			</span>
		</div>
	} else {
		<div class="flex flex-none size-9 items-center justify-center">
			if m.Icon != nil {
				@m.Icon.ToTempl(ctx)
			}
		</div>
	}
}

// Deprecated: use [ZThinButton] instead
type ThinButton struct {
	// IconPath is the icon on the button. If empty, no icon is used.
	Icon Icon
}

templ (m ThinButton) ToTempl(ctx context.Context) {
	<div class="flex flex-none w-6 h-9 items-center justify-center">
		@m.Icon.ToTempl(ctx)
	</div>
}

// TODO: this is the new thin button please use this.
type ZThinButton struct {
	// IconPath is the icon on the button. If empty, no icon is used.
	Icon Component
}

templ (m ZThinButton) ToTempl(ctx context.Context) {
	<div class="flex flex-none w-6 h-9 items-center justify-center">
		if m.Icon != nil {
			@m.Icon.ToTempl(ctx)
		}
	</div>
}
