package component

import (
	"context"
	"fmt"
)

// Sprite is a sprite.
// TODO: Sprite implementation works, but is kinda iffy.
type Sprite struct {
	SpriteMap string

	BGHeight int

	BGWidth int

	Height int

	Width int

	X int

	Y int

	Round RoundSize
}

templ (m Sprite) ToTempl(ctx context.Context) {
	<div class={ sprite(m), m.Round.class() }></div>
}

css sprite(sprite Sprite) {
	background-image: { fmt.Sprintf("url(%s)", sprite.SpriteMap) };
	background-position: { fmt.Sprintf("-%dpx -%dpx", sprite.X, sprite.Y) };
	background-size: { fmt.Sprintf("%dpx %dpx", sprite.BGWidth, sprite.BGHeight) };
	width: { fmt.Sprintf("%dpx", sprite.Width) };
	height: { fmt.Sprintf("%dpx", sprite.Height) };
}
